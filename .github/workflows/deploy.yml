name: Deploy to Azure VM

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare SSH (key + known_hosts)
        run: |
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          cat > ~/.ssh/id_ed25519 <<'EOF'
          ${{ secrets.AZURE_VM_SSH_KEY }}
          EOF
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p "${{ secrets.AZURE_VM_PORT || 22 }}" "${{ secrets.AZURE_VM_HOST }}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: SSH connectivity check
        run: |
          ssh -i ~/.ssh/id_ed25519 -o BatchMode=yes -o StrictHostKeyChecking=yes \
            -p ${{ secrets.AZURE_VM_PORT || 22 }} \
            ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} "echo SSH_OK && hostname && date"

      - name: Rsync code to VM
        run: |
          rsync -az --delete \
            -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes -p ${{ secrets.AZURE_VM_PORT || 22 }}" \
            --exclude '.git' --exclude '.github' --exclude 'target' \
            ./ ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}:/home/${{ secrets.AZURE_VM_USERNAME }}/usersdbcode/

      - name: Remote deploy (stop + build + start)
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes -p ${{ secrets.AZURE_VM_PORT || 22 }} \
            ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} 'bash -s' <<'ENDSSH'
            set -eux

            APP_DIR="/home/${{ secrets.AZURE_VM_USERNAME }}/usersdbcode"
            cd "$APP_DIR"

            # Зупинка поточного додатку
            pkill -f "java.*demo" || echo "Додаток не був запущений"

            # Git оновлення
            git fetch origin
            branch=$(git rev-parse --abbrev-ref HEAD)
            git reset --hard origin/$branch

            # Збірка Maven
            if [ -d "demo" ]; then
              cd demo
              chmod +x mvnw
              ./mvnw clean package -DskipTests
            else
              echo "Каталог demo не знайдено"
              exit 1
            fi

            # Запуск нового додатку
            JAR_FILE=$(ls target/demo-*.jar | head -n1)
            if [ -z "$JAR_FILE" ]; then
              echo "JAR файл не знайдено"
              exit 1
            fi
            nohup java -jar "$JAR_FILE" > /home/${{ secrets.AZURE_VM_USERNAME }}/spring-boot.log 2>&1 &
            disown

            echo "Деплой завершено!"

      - name: Remote health check
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes -p ${{ secrets.AZURE_VM_PORT || 22 }} \
            ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} '
            set -e
            for i in {1..30}; do
              code=$(curl -s -o /dev/null -w "%{http_code}" http://48.220.48.235:8080/actuator/health || true)
              if [ "$code" = "200" ]; then echo "Healthy"; exit 0; fi
              echo "Not ready ($i), code=$code"; sleep 2
            done
            exit 1
          '
